buildscript {
    repositories {
        flatDir { dirs '../../../lib' } // For the DexGuard plugin.
        jcenter()                       // For the Android plugin.
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
        classpath ':dexguard:'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'dexguard'

// DexGuard's -multidex option leverages Android's multidex functionality
// at runtime, so we can also include the support libraries for backward
// compatibility.
dependencies {
  compile 'com.android.support:multidex:1.0.0'
}

android {
    buildToolsVersion "22.0.1"
    compileSdkVersion 23

    signingConfigs {
        debug {
            storeFile     file('../../debug.keystore')
            storePassword 'android'
            keyAlias      'androiddebugkey'
            keyPassword   'android'
        }
    }

    defaultConfig {
        signingConfig signingConfigs.debug

        // DexGuard performs shrinking and multidexing for us,
        // so we leave these options disabled.
        //multidexEnabled true
        //minificationEnable true
        //resourceShrinking ttrue
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs         = ['src']
            resources.srcDirs    = ['src']
            aidl.srcDirs         = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs          = ['res']
            assets.srcDirs       = ['assets']
        }

        instrumentTest.setRoot('tests')
    }

    buildTypes {
        debug {
            // For many applications, you can avoid multidexing if you just
            // enable shrinking in debug builds. This can even speed up the
            // build, because the initial shrinking step is fast. You do need
            // to make sure to have a working DexGuard configuration for your
            // project.
            //proguardFile getDefaultDexGuardFile('dexguard-debug-shrink.pro')
            // instead of the default:
            proguardFile getDefaultDexGuardFile('dexguard-debug.pro')

            proguardFile 'dexguard-project.txt'
            //proguardFile 'dexguard-project-debug.txt'
            proguardFile 'proguard-project.txt'
        }
        release {
            proguardFile getDefaultDexGuardFile('dexguard-release-aggressive.pro')
            proguardFile 'dexguard-project.txt'
            //proguardFile 'dexguard-project-release.txt'
            proguardFile 'proguard-project.txt'
        }
    }
}

// Show DexGuard's console output, so we can see some statistics.
//afterEvaluate {
//    dexguardRelease.logging.level = 'INFO'
//}
